<!DOCTYPE html>
<html>
    <head>
        <title><%- pageTitle %></title>
        <link rel="stylesheet" href="/solo-mpdReport/css/datatables.min.css" />
        <style>
            body {
                font-family: sans-serif;
                padding: 1em;
            }
            button {
                margin: 1em 0;
            }
            table th, table td {
                padding: 3px;
            }
            #chart {
                padding: 0 1em;
                width: 90vw;
                height: 20em;
                margin: 0 auto 1em;
                display: none;
            }
            #chart.fixed {
                position: fixed;
                top: 0;
                
            }
            #chart-close {
                display: none;
                position: fixed;
                top: 5px;
                right: 5px;
                background: black;
                color: white;
                border: solid 1px black;
                border-radius: 20px;
                box-shadow: 1px 1px 2px gray;
                width: 25px;
                height: 22px;
                padding-top: 3px;
                text-align: center;
                cursor: pointer;
            }
            table th.staff-name {
                cursor: pointer;
                text-decoration: underline;
            }
            table th.date {
                font-size: .8em;
                white-space: nowrap;
            }
        </style>
    </head>
    
    <body>
        <h1>
            <%- pageTitle %>
            <button id="download">Download as Excel file</button>
        </h1>
        
        <h3>Select a name from the table to display chart</h3>
        <div id="chart"></div>
        <div id="chart-close">x</div>
        
        <table id="mpd-data">
            <thead>
                <tr>
                    <th rowspan="2">Name</th>
                    <th rowspan="2">Account</th>
                    <th rowspan="2">Estimated Balance</th>
                    <th colspan="13" style="border: solid black 1px; background-color: lightgreen">Local support</th>
                    <th colspan="13" style="border: solid black 1px; background-color: lightgrey">Foreign support</th>
                    <th colspan="13" style="border: solid black 1px; background-color: red">Expenses</th>
                </tr>
                <tr>
                    <% [1,2,3].forEach((i) => { %>
                        <% periodLabels.forEach((period) => { %>
                            <th class="date"><%- period %></th>
                        <% }) %>
                    <% }) %>
                </tr>
            </thead>
            
            <tbody>
                <% staffList.forEach((staff) => { %>
                    <tr>
                        <th class="text staff-name" account="<%- staff.accountNum %>"><%- staff.name %></th>
                        <th class="text"><%- staff.accountNum %></th>
                        <td class="currency"><%- staff.estimatedAccountBalance %></td>
                        <% periods.forEach((period) => { %>
                            <% 
                                data[staff.accountNum] = data[staff.accountNum] || {};
                                data[staff.accountNum][period] = data[staff.accountNum][period] || {};
                            %>
                            <td class="currency"><%- Math.round(data[staff.accountNum][period]['localIncome']) %></td>
                        <% }) %>
                        <% periods.forEach((period) => { %>
                            <td class="currency"><%- Math.round(data[staff.accountNum][period]['foreignIncome']) %></td>
                        <% }) %>
                        <% periods.forEach((period) => { %>
                            <td class="currency"><%- Math.round(data[staff.accountNum][period]['expenses']) %></td>
                        <% }) %>
                    </tr>
                <% }) %>
            </tbody>
        </table>
        
        
        <script src="/js/jquery.min.js"></script>
        <script src="/js/xlsx.mini.min.js"></script>
        <script src="/js/highcharts.js"></script>
        <script src="/solo-mpdReport/datatables.min.js"></script>
        <script>
            var $window = $(window);
            var $table = $('#mpd-data');
            var $chart = $('#chart');
            var $chartClose = $('#chart-close');
            
            $chart.show();
            var chartTop = $chart.position().top;
            $chart.hide();
            
            $('#download').on('click', () => {
                var wb = XLSX.utils.table_to_book($table.get(0), {sheet: '<%- pageTitle %>'});
                XLSX.writeFile(wb, 'mpd-dashboard-data.xlsx');
            });
            
            try {
                // Name, Account, Balance
                var columns = [{ type: 'string'}, { type: 'string' }, { type: 'num' }];
                // 13 month x 3
                for (var i=0; i<(13*3); i++) {
                    columns.push({ type: 'num' });
                }
                
                $table.DataTable({
                    order: [[ 1, 'asc' ]],
                    paging: false,
                    columns: columns,
                });
            } catch(err) {
                console.log(err);
            };
            
            $table.on('click', '.staff-name', (event) => {
                var account = $(event.target).attr('account');
                var name = $(event.target).text();
                
                $.ajax({
                    method: 'GET',
                    url: '/opstool-mpdReport/NSDashboard/adminThirteenMonthIandE',
                    headers: {
                        account: account
                    }
                })
                .done((data) => {
                    $('h3').text(name + ' - ' + account);
                    $('#chart').show();
                    
                    // This Highcharts call is copied & pasted from Stewardwise.
                    // see app_NSSPayRoll/templates/mpdDashboard.php
                    Highcharts.chart('chart', {
                        
                      chart: {
                        type: 'column',
                        styledMode: false
                      },
                      
                      title: {
                        text: 'MPD' //'MPD Dashboard'
                      },
                      
                      xAxis: {
                        categories: data.periods
                      },
                      
                      yAxis: {
                        title: {
                          text: 'RMB'
                        },
                        plotLines: [{
                          value: 0,
                          width: 2,
                          color: 'black',
                          dashStyle: 'solid'
                        }],
                        stackLabels: {
                          enabled: false,
                        }
                      },
                      
                      legend: {
                        align: 'right',
                        x: -30,
                        verticalAlign: 'top',
                        y: 25,
                        floating: true,
                        backgroundColor:
                          Highcharts.defaultOptions.legend.backgroundColor || 'white',
                        borderColor: '#CCC',
                        borderWidth: 1,
                        shadow: false
                      },
                      
                      tooltip: {
                        formatter: function() {
                            // Trend
                            if (this.series.name == '趋势') {
                                return `
                                    <b>${this.key}</b><br/>
                                    <span style="color:blue">${this.series.name}</span>: ${this.point.y}<br/>
                                    <i>(<span style="color:lightgreen">当地收入</span> - <span style="color:red">花费</span>)</i>
                                `
                            }
                            // All others
                            else {
                                return `
                                    <b>${this.key}</b><br/>
                                    ${this.series.name}: ${this.point.y}
                                `;
                            }
                        }
                        
                      },
                      
                      plotOptions: {
                        column: {
                          stacking: 'normal',
                          dataLabels: {
                            enabled: false
                          }
                        }
                      },
                      
                      series: [{
                        type: 'column',
                        name: '国外收入', //' Foreign',
                        data: data.foreignIncome,
                        color: 'lightgray'
                      }, {
                        type: 'column',
                        name: '当地收入', // 'Local',
                        data: data.localIncome,
                        color: 'lightgreen'
                      }, {
                        type: 'column',
                        name: '花费', // 'Expenses',
                        data: data.expenses,
                        color: 'red'
                      }, {
                        type: 'spline',
                        name: '趋势', // 'Trend',
                        data: data.trend,
                        color: 'blue'
                      }]
                    });
                    
                })
                .fail((err) => {
                    alert('Error. Maybe try refreshing the page?');
                });
            });
            
            
            $window.on('scroll', () => {
                if ($chart.is(':visible') && $window.scrollTop() >= chartTop) {
                    $chart.addClass('fixed');
                    $chartClose.show();
                }
                else {
                    $chart.removeClass('fixed');
                    $chartClose.hide();
                }
            });
            
            $chartClose.on('click', () => {
                $chart.hide();
                $chartClose.hide();
            });
        </script>
    </body>
</html>
